generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
   relationMode = "prisma"
}


model WorkoutCeleb {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  ratings  String
  planType String?
  routines Routine[]
}
model Testers{
  id    Int @id @default(autoincrement())
  email   String
  addedat DateTime @default(now())
}
model Plan {
  id            Int    @id @default(autoincrement())
  planName      String
  currentStatus String @db.Text
  workoutId     Int
  currentWeek  String
  order       Int
}

model personalPlan {
  id            Int    @id @default(autoincrement())
  personId      String
  currentStatus Int
  workoutId     Int
  currentWeek   Int
}

model Routine {
  id             Int          @id @default(autoincrement())
  workoutCelebId Int
  weekRoutine    String
  order          Int
  planId         Int?
  exercises      Exercise[]
  workoutCeleb   WorkoutCeleb @relation(fields: [workoutCelebId], references: [id])
}

model Exercise {
  id              Int     @id @default(autoincrement())
  name            String
  type            String
  setType         String?
  order           Int
  routineId       Int
  videoId         String
  machineSettings String
  routine         Routine @relation(fields: [routineId], references: [id])
  sets            Set[]
}

model Set {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  volume     String
  weight     String
  restTime   String
  exerciseId Int
  order      Int
  routineId  Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
}

model PersonalSets {
  id             Int    @id @default(autoincrement())
  name           String
  personId       String
  reps           String
  weight         String
  RestTime       String
  RestType       String
  exerciseId     Int
  WorkoutCelebId Int
  type           String
  order          Int
  SetId          Int
  routineId      Int
}

model UserToWork {
  id             Int    @id @default(autoincrement())
  personId       String
  WorkoutCelebId Int
  WorkoutName    String
  planType String?
  @@index([personId])
}

model userSetHistory {
  id             Int      @id @default(autoincrement())
  name           String
  personId       String
  SetId          Int
  reps           String
  weight         String
  RestTime       String
  RestType       String
  exerciseId     Int
  WorkoutCelebId Int
  type           String
  createdAt      DateTime @default(now())
}

model Sessions {
  id             Int      @id @default(autoincrement())
  personId       String
  RoutineId      Int
  StartedAt      DateTime @default(now())
  WorkoutCelebId Int
  FinsihedAt     DateTime
  Status         String
  RoutineName    String
 
}

model UserDetails {
  id         Int    @id @default(autoincrement())
  weight     String
  height     String
  gender     String
  experience String
  personId   String

}

model PersonalExercise {
  id              Int     @id @default(autoincrement())
  name            String
  routineId       Int
  machineSettings String
  order           Int
  setType         String?
  type            String
  videoId         String
  workoutCelebId  Int
  personId        String
  exerciseToSet   Int
}
