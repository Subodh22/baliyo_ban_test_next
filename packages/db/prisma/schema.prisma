generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
   relationMode = "prisma"
}

model PersonalExercise{
   id    Int @id @default(autoincrement())
    name            String
  type            String
  setType         String?
  order           Int
  routineId       Int
  videoId         String
  machineSettings String
  workoutCelebId  Int
  personId        String
  exerciseToSet    Int

}
model Sessions{
  id  Int @id @default(autoincrement())
  personId String
  RoutineId Int
  StartedAt DateTime  @default(now())
  WorkoutCelebId Int
  FinsihedAt DateTime
  Status  String
  RoutineName String

}
model UserDetails{
  id      Int @id @default(autoincrement())
  weight  String
  height  String
  gender  String
  experience String
  personId String 

}

model Exercise {
  id              Int     @id @default(autoincrement())
  name            String
  type            String
  setType         String?
  order           Int
  routineId       Int
  videoId         String
  machineSettings String
  routine         Routine @relation(fields: [routineId], references: [id])
  sets            Set[]
}

model Routine {
  id             Int          @id @default(autoincrement())
  workoutCelebId Int
  weekRoutine    String
  order          Int
  exercises      Exercise[]
  workoutCeleb   WorkoutCeleb @relation(fields: [workoutCelebId], references: [id])
}

model Set {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  volume     String
  weight     String
  restTime   String
  exerciseId Int
  order      Int
  routineId  Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
}

model PersonalSets {
  id             Int    @id @default(autoincrement())
  name           String
  personId       String
  SetId           Int
  reps           String
  weight         String
  order          Int
  RestTime       String
  RestType       String
  exerciseId     Int
  WorkoutCelebId Int
  type           String
  routineId       Int
   
 
}

model userSetHistory {
  id             Int      @id @default(autoincrement())
  name           String
  personId       String
  SetId          Int
  reps           String
  weight         String
  RestTime       String
  RestType       String
  exerciseId     Int
  WorkoutCelebId Int
  type           String
  createdAt      DateTime @default(now())
}

model WorkoutCeleb {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  ratings  String
  routines Routine[]
}

model UserToWork {
  id             Int    @id @default(autoincrement())
  personId       String
  WorkoutCelebId Int
  WorkoutName    String

  @@index([personId])
}
